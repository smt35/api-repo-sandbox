{
    "swagger": "2.0",
    "info": {
        "title": "Names",
        "description": "Students on Doug's Team",
        "version": "v1"
    },
    "host": "edge-wso2.byu.edu:8243",
    "schemes": [
        "https"
    ],
    "basePath": "/byuapi/test-names",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Names",
                "description": "Returns a List of Student Names",
                "operationId": "getNames",
                "parameters": [
                    {
                        "name": "net_id",
                        "in": "query",
                        "description": "Student NetId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Student Frist Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "description": "Student Surname",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "seat_number",
                        "in": "query",
                        "description": "Student Seat Number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Student Gender",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Names"
                ],
                "responses": {
                    "200": {
                        "description": "Names Retrieved",
                        "schema": {
                            "$ref": "#/definitions/names"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - unable to interpret request",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "401": {
                        "description": "Authentication required to access data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "403": {
                        "description": "Access denied to protected data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "404": {
                        "description": "No Student Names satisfy the query parameters - the collection is empty",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "409": {
                        "description": "Query parameters conflict or are malformed",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            },
            "post": {
                "summary": "New Student's Name",
                "description": "Enter a newly hired student's name",
                "operationId": "newStudent",
                "parameters": [
                    {
                        "name": "net_id",
                        "in": "body",
                        "description": "New Student to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/name"
                        }
                    }
                ],
                "tags": [
                    "Names"
                ],
                "responses": {
                    "201": {
                        "description": "Student Added",
                        "schema": {
                            "$ref": "#/definitions/name"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - unable to interpret request",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "401": {
                        "description": "Authentication required to access data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "403": {
                        "description": "Access denied to protected data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "409": {
                        "description": "Request Body conflicts or is malformed",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            },
            "options": {
                "summary": "Names",
                "description": "What can this endpoint do?",
                "operationId": "namesOptions",
                "tags": [
                    "Names"
                ],
                "responses": {
                    "200": {
                        "description": "Supported HTTP Methods",
                        "schema": {
                            "$ref": "#/definitions/methods"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - unable to interpret request",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/{net_id}": {
            "get": {
                "summary": "Names",
                "description": "Returns a specific Student's Name",
                "operationId": "getName",
                "parameters": [
                    {
                        "name": "net_id",
                        "in": "path",
                        "description": "Student Net Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Names"
                ],
                "responses": {
                    "200": {
                        "description": "Student Name Retrieved",
                        "schema": {
                            "$ref": "#/definitions/name"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - unable to interpret request",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "401": {
                        "description": "Authentication required to access data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "403": {
                        "description": "Access denied to protected data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "404": {
                        "description": "No ID satisfy the request - the collection is empty",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Names",
                "description": "Delete a specific Student",
                "operationId": "deleteName",
                "parameters": [
                    {
                        "name": "net_id",
                        "in": "path",
                        "description": "Student Net Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Names"
                ],
                "responses": {
                    "204": {
                        "description": "Student successfully removed"
                    },
                    "400": {
                        "description": "Invalid Request - unable to interpret request",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "401": {
                        "description": "Authentication required to access data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "403": {
                        "description": "Access denied to protected data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Names",
                "description": "Modify a Student's Name",
                "operationId": "modifyName",
                "parameters": [
                    {
                        "name": "net_id",
                        "in": "path",
                        "description": "Student Net Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Names"
                ],
                "responses": {
                    "200": {
                        "description": "Student's Name Modified",
                        "schema": {
                            "$ref": "#/definitions/name"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - unable to interpret request",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "401": {
                        "description": "Authentication required to access data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "403": {
                        "description": "Access denied to protected data",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "409": {
                        "description": "Request Body conflicts or is malformed",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            },
            "options": {
                "summary": "Names",
                "description": "What can this endpoint do?",
                "operationId": "nameOptions",
                "parameters": [
                    {
                        "name": "net_id",
                        "in": "path",
                        "description": "Student Net Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Names"
                ],
                "responses": {
                    "200": {
                        "description": "Supported HTTP Methods",
                        "schema": {
                            "$ref": "#/definitions/methods"
                        }
                    },
                    "400": {
                        "description": "Invalid Request - unable to interpret request",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "names": {
            "description": "A list of Student names",
            "type": "array",
            "items": {
                "$ref": "#/definitions/name"
            }
        },
        "name": {
            "description": "Student Name",
            "type": "object",
            "required": [
                "net_id",
                "first_name",
                "surname",
                "seat_number",
                "gender"
            ],
            "properties": {
                "net_id": {
                    "description": "Student Net Id",
                    "type": "string",
                    "maxLength": 10
                },
                "first_name": {
                    "description": "Student's First Name",
                    "type": "string"
                },
                "surname": {
                    "description": "Student's Surnmane",
                    "type": "string"
                },
                "seat_number": {
                    "description": "Student's Seat Number",
                    "type": "integer"
                },
                "gender": {
                    "description": "Student's Gender",
                    "type": "string",
                    "enum": [
                      "Male",
                      "Female"
                      ]
                }
            }
        },
        "error": {
            "description": "Error Information",
            "type": "object",
            "properties": {
                "return_code": {
                    "type": "integer",
                    "format": "int32"
                },
                "explanation": {
                    "type": "string"
                },
                "error_data": {
                    "type": "string"
                }
            }
        },
        "methods": {
            "description": "Supported HTTP Methods",
            "type": "array",
            "items": {
                "type": "string"
            }
        }
    }
}