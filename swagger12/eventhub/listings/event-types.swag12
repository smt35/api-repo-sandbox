{
  "apiVersion": "v1",
  "swaggerVersion": "1.2",
  "basepath": "http://edge-wso2.byu.edu:3000/byuapi/eventhub",
  "resourcePath": "/event-types",
  "apis": [
    {
      "path": "/event-types",
      "description": "Manage the event-types visible on the Administrative Portal",
      "operations": [
        {
          "method": "GET",
          "summary": "Lists the set of event-types visible on the Administrative Portal.",
          "nickname": "getEventTypes",
          "parameters": [
            {
              "name": "domain",
              "required": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "entity",
              "required": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "event-type",
              "required": false,
              "type": "string",
              "paramType": "query"
            }
          ],
          "responseMessages": [
            {
              "code": "200",
              "message": "event-types Retrieved",
              "responseModel": "event-types"
            },
            {
              "code": "204",
              "message": "No results found"
            },
            {
              "code": "400",
              "message": "Unknown parameter in search criteria",
              "responseModel": "error"
            }
          ]
        },
        {
          "method": "POST",
          "summary": "Defines a new event type.",
          "nickname": "createEventType",
          "parameters": [
            {
              "name": "body",
              "description": "Request Body",
              "required": true,
              "type": "event_type_definition_create",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": "201",
              "message": "Event type Added",
              "responseModel": "event_type_definition_create"
            },
            {
              "code": "400",
              "message": "Invalid Request - unable to interpret request",
              "responseModel": "error"
            },
            {
              "code": "401",
              "message": "Authentication required to add a event type",
              "responseModel": "error"
            },
            {
              "code": "403",
              "message": "Access denied - not authorized to add a event type",
              "responseModel": "error"
            },
            {
              "code": "409",
              "message": "Body of the request contains conflicting, malformed, or invalid data",
              "responseModel": "error"
            }
          ]
        },
        {
          "method": "OPTIONS",
          "summary": "What can this endpoint do?",
          "nickname": "eventTypesOptions",
          "responseMessages": [
            {
              "code": "200",
              "message": "Successful",
              "responseModel": "options"
            },
            {
              "code": "400",
              "message": "Invalid Request - unable to interpret request",
              "responseModel": "error"
            }
          ]
        }
      ]
    },
    {
      "path": "/event-types/{domain}/{entity}/{event_type}",
      "description": "Manage a specific event type visible on the Administrative Portal",
      "operations": [
        {
          "method": "PUT",
          "summary": "Modify an event type",
          "nickname": "modifyEventType",
          "parameters": [
            {
              "name": "domain",
              "description": "domain",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "entity",
              "description": "entity",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "event_type",
              "description": "event_type",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "body",
              "description": "Request Body",
              "required": true,
              "type": "event_type_definition_create",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": "200",
              "message": "Event type successfully modified",
              "responseModel": "event_type_definition_create"
            },
            {
              "code": "400",
              "message": "Invalid Request - unable to interpret request",
              "responseModel": "error"
            },
            {
              "code": "401",
              "message": "Authentication required to modify an event type",
              "responseModel": "error"
            },
            {
              "code": "403",
              "message": "Access denied - not authorized to modify an event type",
              "responseModel": "error"
            },
            {
              "code": "409",
              "message": "Body of the request contains conflicting, malformed, or invalid data",
              "responseModel": "error"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Delete an event type",
          "nickname": "deleteEventType",
          "parameters": [
            {
              "name": "domain",
              "description": "domain",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "entity",
              "description": "entity",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "event_type",
              "description": "event_type",
              "required": true,
              "type": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": "204",
              "message": "Event type successfully removed"
            },
            {
              "code": "400",
              "message": "Invalid Request - unable to interpret request",
              "responseModel": "error"
            },
            {
              "code": "401",
              "message": "Authentication required to delete an event type",
              "responseModel": "error"
            },
            {
              "code": "403",
              "message": "Access denied - not authorized to delete an event type",
              "responseModel": "error"
            },
            {
              "code": "404",
              "message": "Event type not found",
              "responseModel": "error"
            }
          ]
        },
        {
          "method": "OPTIONS",
          "summary": "What can this endpoint do?",
          "nickname": "eventTypeOptions",
          "parameters": [
            {
              "name": "domain",
              "description": "domain",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "entity",
              "description": "entity",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "event_type",
              "description": "event_type",
              "required": true,
              "type": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": "200",
              "message": "Successful",
              "responseModel": "options"
            },
            {
              "code": "400",
              "message": "Invalid Request - unable to interpret request",
              "responseModel": "error"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "error": {
      "id": "error",
      "description": "Additional explanation for error conditions",
      "required": [
        "return_code",
        "explanation",
        "error_data"
      ],
      "properties": {
        "return_code": {
          "description": "The HTTP Status code",
          "type": "integer",
          "format": "int32"
        },
        "explanation": {
          "description": "Detailed explanation of the error",
          "type": "string"
        },
        "error_data": {
          "description": "When appropriate, the data value that caused the error",
          "type": "string"
        }
      }
    },
    "options": {
      "id": "options",
      "description": "Array of options",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "event-types": {
      "id": "event-types",
      "type": "object",
      "properties": {
        "event_types": {
          "$ref": "event_type_definition"
        }
      },
      "required": [
        "event_types"
      ]
    },
    "event_type_definition": {
      "id": "event_type_definition",
      "type": "object",
      "properties": {
        "event_type_definition": {
          "$ref": "event_type_array"
        }
      },
      "required": [
        "event_type_definition"
      ]
    },
    "event_type_array": {
      "id": "event_type_array",
      "type": "array",
      "items": [
        {
          "$ref": "event"
        }
      ]
    },
    "event_type_definition_create": {
      "id": "event_type_definition_create",
      "type": "object",
      "properties": {
        "event_type_definition": {
          "$ref": "event"
        }
      },
      "required": [
        "event_type_definition"
      ]
    },
    "event": {
      "id": "event",
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "entity": {
          "type": "string"
        },
        "event_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filter_names": {
          "$ref": "filter_names"
        }
      },
      "required": [
        "domain",
        "entity",
        "event_type",
        "description",
        "filter_names"
      ]
    },
    "filter_names": {
      "id": "filter_names",
      "type": "object",
      "properties": {
        "filter_name": {
          "$ref": "filter_name"
        }
      }
    },
    "filter_name": {
      "id": "filter_name",
      "type": "array",
      "items": [
        {
          "type": "string"
        }
      ]
    }
  }
}
